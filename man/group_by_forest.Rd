% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ihw_forest.R
\name{group_by_forest}
\alias{group_by_forest}
\title{Stratify hypotheses based on random forest construction, alternative to \code{groups_by_filter_multivariate}
  groups are homogenous wrt to Storeys null proportion estimator
 
 see https://doi.org/10.7717/peerj.6035 for details on BocaLeek construction}
\usage{
group_by_forest(
  pvalues,
  covariates,
  folds,
  ntrees = 10,
  n_censor_thres = 5,
  nsplit = "auto",
  nodedepth = "auto",
  nodesize = "auto",
  mtry = "auto",
  seed = NULL
)
}
\arguments{
\item{pvalues}{Numeric vector of unadjusted p-values.}

\item{covariates}{Matrix which contains the covariates (independent under the H0 of the p-value) for each test.}

\item{folds}{Integer vector, Pre-specify assignment of hypotheses into folds.}

\item{ntrees}{Integer, see same parameter in \code{\link[randomForestSRC]{rfsrc}}}

\item{n_censor_thres}{Integer, number of censoring thresholds tau to be considered}

\item{nsplit}{Integer, see same parameter in \code{\link[randomForestSRC]{rfsrc}}
Use "auto" for automatic selection.}

\item{nodedepth}{Integer, see same parameter in \code{\link[randomForestSRC]{rfsrc}}
Use "auto" for automatic selection.}

\item{nodesize}{Integer, see same parameter in \code{\link[randomForestSRC]{rfsrc}}
Use "auto" for automatic selection.}

\item{mtry}{Integer, see same parameter in \code{\link[randomForestSRC]{rfsrc}}
Use "auto" for automatic selection.}

\item{seed}{Integer, specifies random seed to be used}
}
\value{
list of data.frames representing group membership for each test. list length equals the number of folds.
}
\description{
Stratify hypotheses based on random forest construction, alternative to \code{groups_by_filter_multivariate}
  groups are homogenous wrt to Storeys null proportion estimator
 
 see https://doi.org/10.7717/peerj.6035 for details on BocaLeek construction
}
\examples{

save.seed <- .Random.seed
set.seed(1)
X <- runif(20000, min = 0, max = 2.5) # covariate
H <- rbinom(20000, 1, 0.1) # hypothesis true or false
Z <- rnorm(20000, H * X) # Z-score
folds <- sample(1:5, 20000, replace = TRUE)
.Random.seed <- save.seed
pvalue <- 1 - pnorm(Z) # pvalue
groups <- group_by_forest(pvalue, as.matrix(X), folds)
m_groups <- lapply(groups, function(group) {
  lapply(group, function(group_i) table(group_i, folds))
})
}
