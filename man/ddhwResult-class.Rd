% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/ddhw_class.R
\docType{class}
\name{ddhwResult-class}
\alias{adj_pvalues}
\alias{adj_pvalues,ddhwResult-method}
\alias{alpha}
\alias{alpha,ddhwResult-method}
\alias{as.data.frame,ddhwResult-method}
\alias{ddhwResult}
\alias{ddhwResult-class}
\alias{filter_statistics}
\alias{filter_statistics,ddhwResult-method}
\alias{groups_factor}
\alias{groups_factor,ddhwResult-method}
\alias{pvalues}
\alias{pvalues,ddhwResult-method}
\alias{rejected_hypotheses}
\alias{rejected_hypotheses,ddhwResult-method}
\alias{rejections}
\alias{rejections,ddhwResult-method}
\alias{show,ddhwResult-method}
\alias{thresholds}
\alias{thresholds,ddhwResult-method}
\alias{weighted_pvalues}
\alias{weighted_pvalues,ddhwResult-method}
\alias{weights,ddhwResult-method}
\title{An S4 class to represent the DDHW output.}
\usage{
adj_pvalues(object)

\S4method{adj_pvalues}{ddhwResult}(object)

\S4method{weights}{ddhwResult}(object, levels_only = FALSE)

thresholds(object, ...)

\S4method{thresholds}{ddhwResult}(object, levels_only = FALSE)

pvalues(object)

\S4method{pvalues}{ddhwResult}(object)

weighted_pvalues(object)

\S4method{weighted_pvalues}{ddhwResult}(object)

filter_statistics(object)

\S4method{filter_statistics}{ddhwResult}(object)

groups_factor(object)

\S4method{groups_factor}{ddhwResult}(object)

alpha(object)

\S4method{alpha}{ddhwResult}(object)

rejections(object, ...)

\S4method{rejections}{ddhwResult}(object)

rejected_hypotheses(object, ...)

\S4method{rejected_hypotheses}{ddhwResult}(object)

\S4method{as.data.frame}{ddhwResult}(x)

\S4method{show}{ddhwResult}(object)
}
\arguments{
\item{object,x}{A ddhwResult object as returned by a call to ddhw(...)}

\item{levels_only}{Boolean, if FALSE, return a vector of weights (thresholds) with one weight
(threshold) for each hypothesis, otherwise return a nfolds x nbins matrix of weights/thresholds}

\item{...}{Parameters passed in to individual methods}
}
\description{
An S4 class to represent the DDHW output.
}
\section{Methods (by generic)}{
\itemize{
\item \code{adj_pvalues}: Extract adjusted pvalues

\item \code{weights}: Extract weights

\item \code{thresholds}: Calculate ddhw thresholds

\item \code{pvalues}: Extract pvalues

\item \code{weighted_pvalues}: Extract weighted pvalues

\item \code{filter_statistics}: Extract filter statistics

\item \code{groups_factor}: Extract factor of stratification (grouping) variable

\item \code{alpha}: Extract nominal significance (alpha) level

\item \code{rejections}: Total number of rejected hypotheses by DDHW procedure

\item \code{rejected_hypotheses}: Get a boolean vector of the rejected hypotheses

\item \code{as.data.frame}: Convert ddhwResult object to data frame

\item \code{show}: Convenience method to show ddhwResult object
}}
\section{Slots}{

\describe{
\item{\code{df}}{A data frame which collects the input data such as the vector of p values and the filter statistics, the group assignment, as well as outputs (weighted p-values, adjusted p-values)}

\item{\code{weights}}{A (nbins X nfolds) matrix of the weight assigned to each stratum}

\item{\code{alpha}}{Numeric, the nominal significance level at which the FDR is to be controlled}

\item{\code{nbins}}{Integer, number of distinct levels into which the hypotheses were stratified}

\item{\code{nfolds}}{Integer, number of folds for pre-validation procedure}

\item{\code{regularization_term}}{Numeric vector, the final value of the regularization parameter within each fold}

\item{\code{penalty}}{Character, "uniform deviation" or "total variation"}

\item{\code{filter_statistic_type}}{Character, "ordinal" or "nominal"}

\item{\code{reg_path_information}}{A data frame, information about the whole regularization path. (Currently empty data frame)}

\item{\code{solver_information}}{A list, solver specific output, e.g. were all subproblems solved to optimality? (Currently empty list)}
}}
\examples{
set.seed(1)
X   <- runif(20000, min=0.5, max=4.5) #covariate
H   <- rbinom(20000,1,0.1)            #hypothesis true or false
Z   <- rnorm(20000, H*X)              #Z-score
pvalue <- 1-pnorm(Z)                  #pvalue
ddhw_res <- ddhw(pvalue, X, .1)
rejections(ddhw_res)
colnames(as.data.frame(ddhw_res))
}
\seealso{
ddhw, plot_ddhw
}

