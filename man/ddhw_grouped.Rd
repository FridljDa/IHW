% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/ddhw.R
\name{ddhw_grouped}
\alias{ddhw}
\alias{ddhw_grouped}
\title{ddhw: Data-Driven Hypothesis Weights}
\usage{
ddhw_grouped(unadj_p, groups, alpha, mtests = length(unadj_p),
  bh_rejections = "auto", rejections_bound = NULL, local_fdr = F,
  optim_method = "MILP", solver = "Rsymphony", regularization_term = Inf,
  penalty = "total variation", optim_pval_threshold = "auto",
  time_limit = Inf, node_limit = Inf, threads = 0, solution_limit = Inf,
  mip_gap_abs = Inf, mip_gap = 10^(-4), MIPFocus = 0,
  lp_relaxation = TRUE, pi0_adaptive = FALSE)

ddhw(unadj_p, filter_statistic, nbins, alpha, ...)
}
\arguments{
\item{unadj_p}{Numeric vector of unadjusted p-values.}

\item{groups}{Vector which assigns a group to each p-value.}

\item{alpha}{Numeric, sets the nominal level for FDR control.}

\item{mtests}{Numeric, true number of comparisons, must be at least â€˜length(unadj_p) !NOT tested yet}

\item{local_fdr}{Combine DDHW ideas with Cai's estimator. !NOT IMPLEMENTED}

\item{optim_method}{Optimization method with which optimal weights are determined. Available options are "MILP" (default) and "subplex".}

\item{solver}{Solver to be used for "MILP" optimization. Available options are "Rsymphony" (default, open source) and "gurobi" (commercial, free for academics, faster).}

\item{regularization_term}{Numeric}

\item{penalty}{"total variation" for ordered data, "uniform deviation" for categorical data}

\item{optim_pval_threshold}{Numeric between 0 and 1 or Character "auto" (default). P-values above this threshold get excluded
from the optimization procedure (e.g. because it is known a-priori that P-values above that threshold will
not get rejected), thus making it faster. Defaults to "auto" which will use heuristics to calculate this threshold.}

\item{time_limit}{Numeric, sets maximum time limit for MILP solvers. Defaults to Inf.}

\item{node_limit}{Integer, sets maximum number of branch and bound nodes to explore for MILP solvers. Defaults to Inf.}

\item{threads}{Integer, number of threads for the MILP solver to use. Defaults to 0 (i.e. solver default, often uses all threads available)}

\item{mip_gap_abs}{Gurobi specific parameter}

\item{mip_gap}{Gurobi specific parameter}

\item{MIPFocus}{Gurobi specific parameter}

\item{lp_relaxation}{If optim_method = "MILP" then one can either solve the NP hard MILP problem (lp_relaxation = F) or the linear relaxation (lp_relaxation=T). The latter is suggested!}

\item{pi0_adaptive}{Enhance DDHW to an alpha-exhaustive procedure. !NOT TESTED YET}

\item{filter_statistic}{Vector which contains the filter-statistic (covariate, independent under the H0) for each p-value}

\item{nbins}{Integer, number of groups into which p-values will be split based on filter_statistic.}
}
\description{
ddhw: Data-Driven Hypothesis Weights
}

